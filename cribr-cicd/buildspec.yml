version: 0.2
shell: bash

env:
  secrets-manager:
    # DockerHub credentials
    DOCKERHUB_USERNAME: cribr-dockerhub-username
    DOCKERHUB_PASSWORD: cribr-dockerhub-password

    # Supabase keys
    SUPABASE_SERVICE_KEY: cribr-supabase-service-key
    SUPABASE_ANON_KEY: cribr-supabase-anon-key
    NEXT_PUBLIC_SUPABASE_ANON_KEY: cribr-next-public-supabase-anon-key

    # Stripe keys
    STRIPE_SECRET_KEY: cribr-stripe-secret-key
    STRIPE_PUBLISHABLE_KEY: cribr-stripe-publishable-key
    STRIPE_WEBHOOK_SECRET: cribr-stripe-webhook-secret

    # APIs
    YOUTUBE_API_KEY: cribr-youtube-api-key
    ASSEMBLYAI_API_KEY: cribr-assemblyai-api-key
    DUMPLINGAI_API_KEY: cribr-dumplingai-api-key
    TRANSCRIPT_IO_API_KEY: cribr-transcript-io-api-key

    # OAuth / GitHub
    GOOGLE_CLIENT_ID: cribr-google-client-id
    GITHUB_TOKEN: cribr-github-token

    # SonarQube
    SONARQUBE_TOKEN: cribr-sonarqube-token

phases:
  install:
    commands:
      - echo "Ensuring Docker is available..."
      - docker --version
      - echo "Installing kubectl if not present..."
      - if ! command -v kubectl &> /dev/null; then
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl";
          chmod +x kubectl;
          mv kubectl /usr/local/bin/;
        fi
      - kubectl version --client

  pre_build:
    commands:
      - echo "Verifying DockerHub credentials..."
      - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 493834426110.dkr.ecr.us-east-1.amazonaws.com

  build:
    commands:
      - echo "Exporting Docker build args..."
      - export DOCKER_BUILD_ARGS="\
        --build-arg SUPABASE_SERVICE_KEY=$SUPABASE_SERVICE_KEY \
        --build-arg SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY \
        --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY \
        --build-arg STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY \
        --build-arg STRIPE_PUBLISHABLE_KEY=$STRIPE_PUBLISHABLE_KEY \
        --build-arg STRIPE_WEBHOOK_SECRET=$STRIPE_WEBHOOK_SECRET \
        --build-arg YOUTUBE_API_KEY=$YOUTUBE_API_KEY \
        --build-arg ASSEMBLYAI_API_KEY=$ASSEMBLYAI_API_KEY \
        --build-arg DUMPLINGAI_API_KEY=$DUMPLINGAI_API_KEY \
        --build-arg TRANSCRIPT_IO_API_KEY=$TRANSCRIPT_IO_API_KEY \
        --build-arg GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID \
        --build-arg GITHUB_TOKEN=$GITHUB_TOKEN \
        --build-arg SONARQUBE_TOKEN=$SONARQUBE_TOKEN"
      - echo "Building Docker image..."
      - docker build $DOCKER_BUILD_ARGS -t cribr-app .
      - echo "Tagging Docker image for ECR..."
      - docker tag cribr-app:latest 493834426110.dkr.ecr.us-east-1.amazonaws.com/cribr-app-repo:latest

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push 493834426110.dkr.ecr.us-east-1.amazonaws.com/cribr-app-repo:latest
      - echo "Updating Kubernetes deployment..."
      - kubectl set image -n cribr-ns deployment/cribr-app cribr-container=493834426110.dkr.ecr.us-east-1.amazonaws.com/cribr-app-repo:latest
      - kubectl rollout status -n cribr-ns deployment/cribr-app
      - kubectl apply -f cribr-cicd/deployment.yaml
      - echo "Deployment complete."

artifacts:
  files:
    - '**/*'
