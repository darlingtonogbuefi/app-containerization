# syntax=docker/dockerfile:1.4

# Stage 1: Install dependencies (including devDependencies)
FROM node:20-alpine AS deps
WORKDIR /app

# Copy only package files first for better caching
COPY package.json package-lock.json ./
RUN npm ci

# Stage 2: Build the app
FROM node:20-alpine AS builder
WORKDIR /app

# Copy node_modules from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy the rest of your app
COPY . .

# Build the app
RUN npm run build

# Remove devDependencies to keep image lean
RUN npm prune --production

# Stage 3: Production runner
FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3000

# Copy production build output only
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public

EXPOSE 3000

# Secrets will be injected at runtime via EKS Secrets Manager (CSI driver or env vars)
CMD ["node", "server.js"]
